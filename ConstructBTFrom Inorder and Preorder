class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return helper(preorder, inorder, 0, preorder.size() - 1, 0, inorder.size());
    }
    TreeNode* helper(vector<int>& preorder, vector<int>& inorder, int ps, int pe, int is, int ie){
        if(ps > pe || is > ie) return nullptr;
        int i = is;
        for(; i <= ie; ++i) {
            if(inorder[i] == preorder[ps]) break;
        }
        TreeNode* root = new TreeNode(preorder[ps]);
        root->left = helper(preorder, inorder, ps + 1, i - is + ps, is, i - 1);
        root->right = helper(preorder, inorder, i - is + ps + 1, pe, i + 1, ie);
    }
};