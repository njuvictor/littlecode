class Solution {
public:
    void solve(vector<vector<char>>& board) {
        int m = board.size();
        if(m == 0) return;
        int n = board[0].size();
        for(int j = 0; j < n; ++j){
            if(board[0][j] == 'O') {helper(board, 0, j);}
            if(board[m - 1][j] == 'O') { helper(board, m - 1, j);}
        }
        for(int i = 1; i < m - 1; ++i){
            if(board[i][0] == 'O') helper(board, i, 0);
            if(board[i][n - 1] == 'O') helper(board, i, n - 1);
        }
        for(int i = 0; i < m; ++i){
            for(int j = 0; j < n; ++j) {
                if(board[i][j] == 'P') board[i][j] = 'O';
                else board[i][j] = 'X';
            }
        }
    }
    void helper(vector<vector<char>>& board, int i, int j) {
        board[i][j] = 'P';
        if(j + 1 < board[0].size() - 1 && board[i][j + 1] == 'O') helper(board, i, j + 1);
        if(i + 1 < board.size() - 1 && board[i + 1][j] == 'O') helper(board, i + 1, j);
        if(j - 1 >= 0 && board[i][j - 1] == 'O') helper(board, i, j - 1);
        if(i - 1 >= 0 && board[i - 1][j] == 'O') helper(board, i - 1, j);
    }
};