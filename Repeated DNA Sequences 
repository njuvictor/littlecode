class Solution {
public:
    vector<string> findRepeatedDnaSequences(string s) {
        vector<string> result;
        if(s.size() < 10) return result;
        unordered_map<int, int> myMap;
        for(int i = 0; i <= s.size() - 10; ++i) {
            if(myMap.find(calMass(s, i)) == myMap.end()) myMap[calMass(s, i)] = 1;
            else {
                if(myMap[calMass(s, i)] == 1){
                    result.push_back(s.substr(i, 10));
                    myMap[calMass(s, i)] = 2;
                }
            }
        }
        return result;
    }
    int calMass(string& s, int i){
        int arr[4] = {0, 1, 2, 3};
        int mass = 0;
        for(int j = i; j < i + 10; ++j){
            if(s[j] == 'A') mass = 10 * mass + arr[0];
            else if(s[j] == 'C') mass = 10 * mass + arr[1];
            else if(s[j] == 'G') mass = 10 * mass + arr[2];
            else if(s[j] == 'T') mass = 10 * mass + arr[3];
        }
        return mass;
    }
};