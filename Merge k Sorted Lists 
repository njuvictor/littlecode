class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.empty()) return nullptr;
        if(lists.size() == 1) return lists[0];
        int end = lists.size() - 1;
        while(0 < end){
            int mid = end / 2 + 1;
            for(int i = 0; i < mid && mid + i <= end; ++i){
                lists[i] = merge2Lists(lists[i], lists[mid + i]);
            }
            end = mid - 1;
        }
        return lists[0];
    }
    ListNode* merge2Lists(ListNode* list1, ListNode* list2) {
        if(!list2) return list1;
        if(!list1) return list2;
        ListNode* head = new ListNode(0);
        ListNode* current = head;
        while(list1 && list2){
            if(list1->val <= list2->val) {
                current->next = list1;
                current = current->next;
                list1 = list1->next;
            }
            else{
                current->next = list2;
                current = current->next;
                list2 = list2->next;
            }
        }
        if(!list1) current->next = list2;
        else if(!list2) current->next = list1;
        return head->next;
    }
};