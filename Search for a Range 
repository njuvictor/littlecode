class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> result = {-1, -1};
        if(nums.empty()) return result;
        int begin = 0;
        int end = nums.size() - 1;
        bool flag = false;
        while(begin <= end){
            int mid = begin + (end - begin) / 2;
            if(nums[mid] < target) begin = mid + 1;
            else if(nums[mid] > target) end = mid - 1;
            else {
                flag = true;
                if(mid - 1 >= 0 && nums[mid - 1] == nums[mid]) end = mid - 1;
                else {
                    begin = mid;
                    break;
                }
            }
        }
        if(flag == false) return {-1, -1};
        result[0] = begin;
        begin = 0;
        end = nums.size() - 1;
        while(begin <= end) {
            int mid = end - (end - begin) / 2;
            if(nums[mid] > target) end = mid - 1;
            else if(nums[mid] < target) begin = mid + 1;
            else {
                if(mid + 1 < nums.size() && nums[mid + 1] == nums[mid]) begin = mid + 1;
                else {
                    begin = mid;
                    break;
                }
            }
        }
        result[1] = begin;
        return result;
    }
};